<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd">
    <!--  扫描组件  除了控制层  -->
    <context:component-scan base-package="com.mffff.ssm">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--  引入jdbc properties文件  -->
    <context:property-placeholder location="classpath:jdbc.properties"></context:property-placeholder>

    <!--  配置数据源  -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${aliyun.driver}"></property>
        <property name="url" value="${aliyun.url}"></property>
        <property name="username" value="${aliyun.username}"></property>
        <property name="password" value="${aliyun.password}"></property>
    </bean>

    <!--  配置事务管理器  -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!--  mybatis-spring 提供的， 配置sqlsessionfactorybean  -->
    <bean class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--    设置mybatis的核心配置文件    -->
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <property name="dataSource" ref="dataSource"></property>
        <property name="typeAliasesPackage" value="com.mffff.ssm.pojo"></property>
        <!--        <property name="mapperLocations" value=""></property>-->
        <!--    分页插件    -->
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor"></bean>
            </array>
        </property>
    </bean>

    <!--  mapper扫描，可以将指定包下所有的mapper接口通过sqlsession创建代理实现类对象。并交给IOC容器管理  -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.mffff.ssm.mapper"></property>
    </bean>
</beans>